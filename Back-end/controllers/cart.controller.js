const Cart = require('../models/cart.model');

// üõí Th√™m s·∫£n ph·∫©m v√†o gi·ªè h√†ng
exports.addProductToCart = async (req, res) => {
  try {
    const { productId, quantity } = req.body;
    const userId = req.user.id;

    let cart = await Cart.findOne({ userId });

    // N·∫øu ch∆∞a c√≥ gi·ªè th√¨ t·∫°o m·ªõi
    if (!cart) {
      cart = new Cart({
        userId,
        products: [{ productId, quantity }],
      });
    } else {
      // N·∫øu c√≥ r·ªìi th√¨ ki·ªÉm tra s·∫£n ph·∫©m ƒë√£ t·ªìn t·∫°i ch∆∞a
      const productIndex = cart.products.findIndex(
        (p) => p.productId.toString() === productId
      );

      if (productIndex > -1) {
        // N·∫øu c√≥ r·ªìi th√¨ tƒÉng s·ªë l∆∞·ª£ng
        cart.products[productIndex].quantity += quantity;
      } else {
        // N·∫øu ch∆∞a c√≥ th√¨ th√™m m·ªõi
        cart.products.push({ productId, quantity });
      }
    }

    await cart.save();
    res.status(200).json({ message: 'ƒê√£ th√™m v√†o gi·ªè h√†ng', cart });
  } catch (error) {
    res.status(500).json({ message: 'L·ªói server', error });
  }
};

// üßæ L·∫•y gi·ªè h√†ng c·ªßa ng∆∞·ªùi d√πng
exports.getCart = async (req, res) => {
  try {
    const userId = req.user.id;
    const cart = await Cart.findOne({ userId }).populate('products.productId');

    if (!cart) return res.status(200).json({ message: 'Gi·ªè h√†ng tr·ªëng', products: [] });

    res.status(200).json(cart);
  } catch (error) {
    res.status(500).json({ message: 'L·ªói server', error });
  }
};

// ‚ùå X√≥a 1 s·∫£n ph·∫©m kh·ªèi gi·ªè
exports.removeProductFromCart = async (req, res) => {
  try {
    const userId = req.user.id;
    const { productId } = req.params;

    const cart = await Cart.findOne({ userId });
    if (!cart) return res.status(404).json({ message: 'Kh√¥ng t√¨m th·∫•y gi·ªè h√†ng' });

    cart.products = cart.products.filter(
      (p) => p.productId.toString() !== productId
    );

    await cart.save();
    res.status(200).json({ message: 'ƒê√£ x√≥a s·∫£n ph·∫©m', cart });
  } catch (error) {
    res.status(500).json({ message: 'L·ªói server', error });
  }
};
